package FrontEnd;

import java.io.IOException;
import java.util.HashMap;
import java.util.LinkedHashSet;

import BackEnd.*;
import java.util.Scanner;

public class ShopApp {

	private ShopDatabase inventory;
	private LinkedHashSet<Supplier> supplierList;
	private HashMap<Integer, Order> orderlist;
	private FileManager fileMgr;

	public ShopApp() throws IOException {
		this.fileMgr = new FileManager("items.txt", "suppliers.txt");
		this.inventory = new ShopDatabase();
	}

	public void Menu() {

		Scanner scan = new Scanner(System.in);

		while (true) {

			this.printMenuChoices();

			String choice = null;
			while (choice == null) {
				choice = this.sanitizeInput(scan.nextLine());
			}

			switch (choice) {
			case "1": { // list all items
				this.inventory.listAllItems();
				break;
			}
			case "2": { // Search by name
				System.out.println("Enter Tool Name >> ");
				this.inventory.searchByName((scan.nextLine()));
				break;
			}
			case "3": {	// search by id
				System.out.println("Enter Tool ID >> ");
				String input = null;
				while (input == null) {
					input = this.sanitizeInput(scan.nextLine());
					this.inventory.searchByID(input);
				}
				break;
				
			}
			case "4":
				break;
			// check qty
			case "5":
				break;
			// decrease
			case "6": {
				scan.close();
				return;
			}

			}

		}
	}

	private void printMenuChoices() {

		System.out.println("Welcome to theShopApp, please select one of the following options: ");
		System.out.format("+-----------------+---------+----------+-----------+%n");
		System.out.println("1. List all tools.items in inventory");
		System.out.println("2. Search for tool by tool name");
		System.out.println("3. Search for tool by tool ID");
		System.out.println("4. Check item quantity");
		System.out.println("5. Decrease item quantity");
		System.out.println("6. Quit");
		System.out.println("\nInput Selection >>");
	}

	private String sanitizeInput(String s) {

		String errMsg = s + " Was an invalid input. Please try again >>";
		try {
			int r = Integer.valueOf(s);
			if (r > 0 && r < 7) {
				return s;
			} else {
				System.out.println(errMsg);
				return null;
			}

		} catch (NumberFormatException e) {
			System.out.println(errMsg);
			return null;
		}
	}

	private void setSupplierList(LinkedHashSet<Supplier> sList) {
		this.supplierList = sList;
	}

	public static void main(String[] args) throws IOException {

		// Initialize database with items and suppliers.

		ShopApp s = new ShopApp();
		s.inventory.setItemList(s.fileMgr.getItems());
		s.setSupplierList(s.fileMgr.getSupplierList());

		s.Menu();
		System.out.println("Quitting");

		return;

		// setFilename
		// this.setInventory(new ShopDatabase(fileMgr.getItems()));

	}
}
